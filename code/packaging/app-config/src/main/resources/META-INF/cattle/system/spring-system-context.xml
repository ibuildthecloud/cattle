<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:task="http://www.springframework.org/schema/task"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:management="http://www.xebia.fr/schema/xebia-management-extras"
    xmlns:extension="http://cattle.io/schemas/spring/extension"
    xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.xebia.fr/schema/xebia-management-extras http://www.xebia.fr/schema/management/xebia-management-extras.xsd
        http://cattle.io/schemas/spring/extension http://cattle.io/schemas/spring/extension-1.0.xsd">

    <bean id="DataSource" factory-bean="DataSourceFactory" factory-method="createDataSource">
        <constructor-arg value="cattle" />
    </bean>

    <bean id="DataSourceFactory" class="io.cattle.platform.datasource.JMXDataSourceFactoryImpl" />

	<bean id="JarInJarServiceLocator" class="io.cattle.platform.liquibase.JarInJarServiceLocator" />
	<bean id="liquibase-core" class="io.cattle.platform.liquibase.Loader" depends-on="JarInJarServiceLocator" >
		<property name="dataSource" ref="DataSource" />
		<property name="changeLog" value="classpath:db/changelog.xml" />
	</bean>

    <bean id="JooqConfiguration" class="io.cattle.platform.db.jooq.config.Configuration" >
        <property name="name" value="cattle" />
        <property name="connectionProvider" ref="JooqConnectionProvider" />
        <property name="listeners">
            <list>
                <bean class="io.cattle.platform.db.jooq.logging.LoggerListener" >
                    <property name="maxLength" value="1000" />
                </bean>
                <bean class="org.jooq.tools.StopWatchListener" />
           </list>
        </property>
    </bean>

    <bean id="LockingJooqConfiguration" class="io.cattle.platform.db.jooq.config.Configuration" autowire-candidate="false" >
        <property name="name" value="cattle" />
        <property name="connectionProvider" ref="JooqConnectionProvider" />
        <property name="listeners">
            <list>
                <bean class="io.cattle.platform.db.jooq.logging.LoggerListener" >
                    <property name="maxLength" value="1000" />
                </bean>
                <bean class="org.jooq.tools.StopWatchListener" />
           </list>
        </property>
        <property name="settings">
            <bean class="org.jooq.conf.Settings" >
                <property name="executeWithOptimisticLocking" value="true" />
            </bean>
        </property>
    </bean>

    <bean id="CoreTransactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="DataSource" />
    </bean>

    <bean id="JooqConnectionProvider" class="org.jooq.impl.DataSourceConnectionProvider" >
        <constructor-arg>
            <bean id="transactionAwareDataSource"
                class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
                <constructor-arg ref="DataSource" />
            </bean>
        </constructor-arg>
    </bean>

    <task:scheduler id="CoreTaskScheduler" pool-size="2" />

    <bean id="ResourceLoader" class="io.cattle.platform.spring.resource.SpringResourceLoader" />

    <bean id="CoreJsonMapper" class="io.cattle.platform.json.JacksonJsonMapper" autowire="byType" />

    <bean id="NoOpJacksonModule" class="com.fasterxml.jackson.databind.module.SimpleModule" />

    <context:mbean-export />

    <management:executor-service 
        id="ProcessExecutorService"
        keep-alive="120"
        pool-size="0-25"
        queue-capacity="0"
        />

    <management:executor-service
        id="ProcessExecutorServiceReplay"
        keep-alive="120"
        pool-size="0-25"
        queue-capacity="0"
        rejection-policy="CALLER_RUNS"
        />

    <management:executor-service 
        id="CoreExecutorService"
        keep-alive="120"
        pool-size="50"
        />

    <management:executor-service
        id="ReplyExecutorService"
        keep-alive="120"
        pool-size="10"
        />

    <bean class="io.cattle.platform.util.concurrent.NamedExecutorService" >
        <property name="name" value="core" />
        <property name="executorService" ref="CoreExecutorService" />
    </bean>

    <bean class="io.cattle.platform.util.concurrent.NamedExecutorService" >
        <property name="name" value="process" />
        <property name="executorService" ref="ProcessExecutorService" />
    </bean>

    <bean class="io.cattle.platform.util.concurrent.NamedExecutorService" >
        <property name="name" value="reply" />
        <property name="executorService" ref="ReplyExecutorService" />
    </bean>

    <bean id="CoreListeningExecutorService" class="com.google.common.util.concurrent.MoreExecutors" factory-method="listeningDecorator" >
        <constructor-arg ref="CoreExecutorService" />
    </bean>

    <bean id="CoreScheduledExecutorService" class="org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean" >
        <property name="poolSize" value="10" />
    </bean>

    <extension:discover class="io.cattle.platform.util.concurrent.NamedExecutorService" />

</beans>
